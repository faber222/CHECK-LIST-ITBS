/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package org.example.view;

import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Insets;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;

import org.example.App;
import org.example.controller.SidebarListener;

/**
 *
 * @author faber222
 */
public class MainWindow extends JFrame implements SidebarListener {

    private boolean isSidebarExpanded = true;
    private final int COLLAPSED_WIDTH = 40;
    private final int EXPANDED_WIDTH = 213;

    /**
     * Creates new form SlaveMDIFrame
     */
    public MainWindow() {
        initComponents();
        buttonRoteadores.addActionListener(e -> onCategorySelected("Roteadores"));
        buttonAps.addActionListener(e -> onCategorySelected("Wifi Empresarial"));
        buttonRadios.addActionListener(e -> onCategorySelected("Radios Outdoor"));
        buttonFibra.addActionListener(e -> onCategorySelected("Fibra Optica"));
        buttonSwitch.addActionListener(e -> onCategorySelected("Switchs"));
        button5G.addActionListener(e -> onCategorySelected("Redes 5G"));
        sidePanel.setBackground(new Color(0, 163, 53));

        configurarBotoesArredondados();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        sidePanel = new javax.swing.JPanel();
        toggleSidebarButton = new javax.swing.JButton();
        titulo = new javax.swing.JLabel();
        jSeparator = new javax.swing.JSeparator();
        buttonRoteadores = new javax.swing.JButton();
        buttonAps = new javax.swing.JButton();
        buttonRadios = new javax.swing.JButton();
        buttonFibra = new javax.swing.JButton();
        buttonSwitch = new javax.swing.JButton();
        button5G = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        contentPanel = new javax.swing.JPanel();
        tabbedPane = new javax.swing.JTabbedPane();
        menuBar = new javax.swing.JMenuBar();
        menuFile = new javax.swing.JMenu();
        menuSair = new javax.swing.JMenuItem();
        menuEdit = new javax.swing.JMenu();
        menuTema = new javax.swing.JMenuItem();
        menuHelp = new javax.swing.JMenu();
        menuCheckUpdate = new javax.swing.JMenuItem();
        menuSobre = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CHECK-LIST-INTELBRAS");
        titulo.setBackground(new java.awt.Color(62, 80, 85));

        toggleSidebarButton.setText("<");
        toggleSidebarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toggleSidebarButtonActionPerformed(evt);
            }
        });

        titulo.setBackground(new java.awt.Color(62, 80, 85));
        titulo.setText("<html><center>CHECK-LIST<br>INTELBRAS</center></html>");
        titulo.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        titulo.setForeground(new java.awt.Color(255, 255, 255));
        titulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titulo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        buttonRoteadores.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        buttonRoteadores.setText("Roteadores");
        buttonRoteadores.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        buttonAps.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        buttonAps.setText("Wifi Empresarial");
        buttonAps.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        buttonRadios.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        buttonRadios.setText("Radios Outdoor");
        buttonRadios.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        buttonFibra.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        buttonFibra.setText("Fibra Optica");
        buttonFibra.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        buttonSwitch.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        buttonSwitch.setText("Switchs");
        buttonSwitch.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        button5G.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        button5G.setText("Redes 5G");
        button5G.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        jLabel1.setFont(new java.awt.Font("SansSerif", 3, 9)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("checklist-intelbras-alpha-v0.0.2");

        javax.swing.GroupLayout sidePanelLayout = new javax.swing.GroupLayout(sidePanel);
        sidePanel.setLayout(sidePanelLayout);
        sidePanelLayout.setHorizontalGroup(
            sidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sidePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(sidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(button5G, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(buttonSwitch, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(buttonRoteadores, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(sidePanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(titulo, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(toggleSidebarButton))
                    .addComponent(buttonAps, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(buttonRadios, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(buttonFibra, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(sidePanelLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        sidePanelLayout.setVerticalGroup(
            sidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sidePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(sidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(toggleSidebarButton)
                    .addGroup(sidePanelLayout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(titulo, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(buttonRoteadores, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(buttonAps, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(buttonRadios, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(buttonFibra, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(buttonSwitch, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(button5G, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 177, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );

        contentPanel.setPreferredSize(new java.awt.Dimension(800, 0));

        javax.swing.GroupLayout contentPanelLayout = new javax.swing.GroupLayout(contentPanel);
        contentPanel.setLayout(contentPanelLayout);
        contentPanelLayout.setHorizontalGroup(
            contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contentPanelLayout.createSequentialGroup()
                .addComponent(tabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 913, Short.MAX_VALUE)
                .addContainerGap())
        );
        contentPanelLayout.setVerticalGroup(
            contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contentPanelLayout.createSequentialGroup()
                .addComponent(tabbedPane)
                .addContainerGap())
        );

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addComponent(sidePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(contentPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 919, Short.MAX_VALUE))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(sidePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(contentPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 586, Short.MAX_VALUE)
        );

        menuFile.setText("File");
        menuFile.setFont(new java.awt.Font("SansSerif", 0, 13)); // NOI18N

        menuSair.setText("Sair");
        menuSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSairActionPerformed(evt);
            }
        });
        menuFile.add(menuSair);

        menuBar.add(menuFile);

        menuEdit.setText("Edit");
        menuEdit.setFont(new java.awt.Font("SansSerif", 0, 13)); // NOI18N

        menuTema.setText("Tema");
        menuTema.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuTemaActionPerformed(evt);
            }
        });
        menuEdit.add(menuTema);

        menuBar.add(menuEdit);

        menuHelp.setText("Ajuda");
        menuHelp.setFont(new java.awt.Font("SansSerif", 0, 13)); // NOI18N

        menuCheckUpdate.setText("Verificar Sobre Atualizações");
        menuCheckUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuCheckUpdateActionPerformed(evt);
            }
        });
        menuHelp.add(menuCheckUpdate);

        menuSobre.setText("Sobre");
        menuHelp.add(menuSobre);

        menuBar.add(menuHelp);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuTemaActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_menuTemaActionPerformed
        App.atualizarTemaGlobal(!App.isDarkMode());
        atualizarUI();
    }// GEN-LAST:event_menuTemaActionPerformed

    private void menuCheckUpdateActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_menuCheckUpdateActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_menuCheckUpdateActionPerformed

    private void menuSairActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_menuSairActionPerformed
        System.exit(0);
    }// GEN-LAST:event_menuSairActionPerformed

    // private void adicionarAba(String titulo, Component componente) {
    // // Verifica se a aba já existe
    // for (int i = 0; i < tabbedPane.getTabCount(); i++) {
    // if (tabbedPane.getTitleAt(i).equals(titulo)) {
    // tabbedPane.setSelectedIndex(i); // Seleciona a aba existente
    // return;
    // }
    // }

    // // Cria uma nova aba
    // tabbedPane.addTab(titulo, componente);

    // // Adiciona um botão de fechar à aba
    // JPanel painelAba = new JPanel(new FlowLayout(FlowLayout.LEFT, 0, 0));
    // painelAba.setOpaque(false);

    // JLabel labelTitulo = new JLabel(titulo);
    // JButton botaoFechar = new JButton("x");
    // botaoFechar.putClientProperty("JButton.buttonType", "roundRect");
    // botaoFechar.setForeground(Color.RED);
    // botaoFechar.setContentAreaFilled(false);
    // botaoFechar.setBorderPainted(false);
    // botaoFechar.setMargin(new Insets(0, 5, 0, 5));
    // botaoFechar.addActionListener(e -> {
    // int index = tabbedPane.indexOfComponent(componente);
    // if (index != -1) {
    // tabbedPane.remove(index);
    // }
    // });

    // painelAba.add(labelTitulo);
    // painelAba.add(botaoFechar);

    // tabbedPane.setTabComponentAt(tabbedPane.indexOfComponent(componente),
    // painelAba);
    // tabbedPane.setSelectedComponent(componente);
    // }

    private void buttonTemaActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_buttonTemaActionPerformed
        App.atualizarTemaGlobal(!App.isDarkMode());
        atualizarUI();
    }// GEN-LAST:event_buttonTemaActionPerformed

    private void configurarBotoesArredondados() {
        Color hoverColor = new Color(0, 122, 57);

        // Lista de todos os botões do sidePanel
        JButton[] botoes = {
                buttonRoteadores,
                buttonAps,
                buttonRadios,
                buttonFibra,
                buttonSwitch,
                button5G,
                toggleSidebarButton
        };

        for (JButton botao : botoes) {
            botao.setContentAreaFilled(false); // Sem fundo padrão
            botao.setOpaque(true); // Permite mudar o fundo depois
            botao.setBackground(new Color(0, 0, 0, 0)); // Transparente
            botao.setBorderPainted(true); // Sem borda
            botao.setFocusPainted(false); // Sem contorno ao clicar

            botao.addMouseListener(new java.awt.event.MouseAdapter() {
                @Override
                public void mouseEntered(java.awt.event.MouseEvent evt) {
                    botao.setBackground(hoverColor);
                }

                @Override
                public void mouseExited(java.awt.event.MouseEvent evt) {
                    botao.setBackground(new Color(0, 0, 0, 0)); // volta a ser transparente
                }

                @Override
                public void mousePressed(java.awt.event.MouseEvent evt) {
                    botao.setBackground(hoverColor);
                }

                @Override
                public void mouseReleased(java.awt.event.MouseEvent evt) {
                    botao.setBackground(hoverColor);
                }
            });
        }

        // Configura cada botão principal
        for (JButton botao : botoes) {
            if (botao != null) {
                botao.putClientProperty("JButton.arc", 20); // raio de arredondamento
                botao.setFocusPainted(false);
                botao.setContentAreaFilled(true);
                botao.setBorderPainted(false);
                // botao.setBackground(new Color(70, 130, 180)); // Cor dos botões principais
                botao.setForeground(Color.WHITE);
            }
        }

        UIManager.put("Button.arc", 15);
        SwingUtilities.updateComponentTreeUI(this);
    }

    private void toggleSidebarButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_toggleSidebarButtonActionPerformed
        isSidebarExpanded = !isSidebarExpanded;

        if (isSidebarExpanded) {
            sidePanel.setPreferredSize(new Dimension(EXPANDED_WIDTH, getHeight()));
            toggleSidebarButton.setText("<");
            titulo.setVisible(true);
            jSeparator.setVisible(true);
            // Mostra todos os botões
            for (Component comp : sidePanel.getComponents()) {
                if (comp != toggleSidebarButton && comp != titulo && comp != jSeparator) {
                    comp.setVisible(true);
                }
            }
        } else {
            sidePanel.setPreferredSize(new Dimension(COLLAPSED_WIDTH, getHeight()));
            toggleSidebarButton.setText(">");
            titulo.setVisible(false);
            jSeparator.setVisible(false);
            // Esconde todos os botões exceto o toggle e version
            for (Component comp : sidePanel.getComponents()) {
                if (comp != toggleSidebarButton && comp != titulo && comp != jSeparator) {
                    comp.setVisible(false);
                }
            }
        }

        // Reposiciona o toggle button no canto superior direito
        toggleSidebarButton.setBounds(
                isSidebarExpanded ? EXPANDED_WIDTH - 30 : COLLAPSED_WIDTH - 30,
                10,
                30,
                30);

        sidePanel.revalidate();
        sidePanel.repaint();
    }// GEN-LAST:event_toggleSidebarButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel.
         * For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        // try {
        // for (javax.swing.UIManager.LookAndFeelInfo info :
        // javax.swing.UIManager.getInstalledLookAndFeels()) {
        // if ("Nimbus".equals(info.getName())) {
        // javax.swing.UIManager.setLookAndFeel(info.getClassName());
        // break;
        // }
        // }
        // } catch (ClassNotFoundException ex) {
        // java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE,
        // null, ex);
        // } catch (InstantiationException ex) {
        // java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE,
        // null, ex);
        // } catch (IllegalAccessException ex) {
        // java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE,
        // null, ex);
        // } catch (javax.swing.UnsupportedLookAndFeelException ex) {
        // java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE,
        // null, ex);
        // }
        // </editor-fold>

        /* Create and display the form */
        // FlatDarkLaf.setup(); // Tema escuro
        SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }

    public void start() {
        new MainWindow().setVisible(true);
    }

    // Método para atualizar todos os componentes
    private void atualizarUI() {
        SwingUtilities.updateComponentTreeUI(this); // Atualiza o JFrame principal
        // for (JInternalFrame frame : mainPanel.getAllFrames()) {
        // SwingUtilities.updateComponentTreeUI(frame); // Atualiza janelas internas
        // }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton button5G;
    private javax.swing.JButton buttonAps;
    private javax.swing.JButton buttonFibra;
    private javax.swing.JButton buttonRadios;
    private javax.swing.JButton buttonRoteadores;
    private javax.swing.JButton buttonSwitch;
    private javax.swing.JPanel contentPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JSeparator jSeparator;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem menuCheckUpdate;
    private javax.swing.JMenu menuEdit;
    private javax.swing.JMenu menuFile;
    private javax.swing.JMenu menuHelp;
    private javax.swing.JMenuItem menuSair;
    private javax.swing.JMenuItem menuSobre;
    private javax.swing.JMenuItem menuTema;
    private javax.swing.JPanel sidePanel;
    private javax.swing.JTabbedPane tabbedPane;
    private javax.swing.JLabel titulo;
    private javax.swing.JButton toggleSidebarButton;
    // End of variables declaration//GEN-END:variables

    @Override
    public void onCategorySelected(String category) {
        // Verifica se a aba já existe
        // for (int i = 0; i < tabbedPane.getTabCount(); i++) {
        // if (tabbedPane.getTitleAt(i).equals(category)) {
        // tabbedPane.setSelectedIndex(i); // Seleciona a aba existente
        // return;
        // }
        // }

        // Cria um novo painel de conteúdo
        // CheckListPanel pane = new CheckListPanel();

        ChecklistViewer newPane = new ChecklistViewer(category);

        // Adiciona a nova aba
        // tabbedPane.addTab(category, pane);
        tabbedPane.addTab(category, newPane);

        // Cria o painel com o título e botão de fechar
        JPanel aba = new JPanel(new FlowLayout(FlowLayout.LEFT, 0, 0));
        aba.setOpaque(false);

        JLabel label = new JLabel(category);
        JButton close = new JButton("x");
        close.setForeground(Color.RED);
        close.setContentAreaFilled(false);
        close.setBorderPainted(false);
        close.setMargin(new Insets(0, 5, 0, 5));
        close.addActionListener(e -> {
            // int index = tabbedPane.indexOfComponent(pane);
            int index = tabbedPane.indexOfComponent(newPane);
            if (index != -1) {
                tabbedPane.remove(index);
            }
        });

        aba.add(label);
        aba.add(close);

        // tabbedPane.setTabComponentAt(tabbedPane.indexOfComponent(pane), aba);
        tabbedPane.setTabComponentAt(tabbedPane.indexOfComponent(newPane), aba);
        // tabbedPane.setSelectedComponent(pane);
        tabbedPane.setSelectedComponent(newPane);
    }
}
